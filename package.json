{
  "name": "code-mantra",
  "publisher": "hirokimukai",
  "displayName": "Code Mantra",
  "description": "Remind yourself of programming principles with customizable notifications",
  "version": "1.1.6",
  "icon": "icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.105.0"
  },
  "categories": [
    "Programming Languages",
    "Education",
    "Other"
  ],
  "keywords": [
    "coding habits",
    "programming principles",
    "reminders",
    "notifications",
    "pragmatic programmer",
    "ETC",
    "DRY",
    "clean code"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/is0692vs/code-mantra"
  },
  "bugs": {
    "url": "https://github.com/is0692vs/code-mantra/issues"
  },
  "homepage": "https://github.com/is0692vs/code-mantra#readme",
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codeMantraPanel",
          "title": "Code Mantra",
          "icon": "$(bell)"
        }
      ]
    },
    "views": {
      "codeMantraPanel": [
        {
          "id": "codeMantraTriggers",
          "name": "Triggers",
          "icon": "$(bell)",
          "contextualTitle": "Code Mantra Triggers"
        }
      ]
    },
    "commands": [
      {
        "command": "code-mantra.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "code-mantra.testNotification",
        "title": "Test Notification",
        "icon": "$(bell)"
      },
      {
        "command": "code-mantra.addTrigger",
        "title": "Add Trigger",
        "icon": "$(add)"
      },
      {
        "command": "code-mantra.editTrigger",
        "title": "Edit Trigger",
        "icon": "$(edit)"
      },
      {
        "command": "code-mantra.deleteTrigger",
        "title": "Delete Trigger",
        "icon": "$(circle-slash)"
      },
      {
        "command": "code-mantra.toggleTrigger",
        "title": "Toggle Trigger Enabled",
        "icon": "$(check)"
      },
      {
        "command": "code-mantra.moveTriggerUp",
        "title": "Move Trigger Up",
        "icon": "$(arrow-up)"
      },
      {
        "command": "code-mantra.moveTriggerDown",
        "title": "Move Trigger Down",
        "icon": "$(arrow-down)"
      },
      {
        "command": "code-mantra.refreshTriggers",
        "title": "Refresh",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "code-mantra.addTrigger",
          "when": "view == codeMantraTriggers",
          "group": "navigation"
        },
        {
          "command": "code-mantra.refreshTriggers",
          "when": "view == codeMantraTriggers",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "code-mantra.editTrigger",
          "when": "view == codeMantraTriggers && viewItem == triggerRule",
          "group": "inline@1"
        },
        {
          "command": "code-mantra.deleteTrigger",
          "when": "view == codeMantraTriggers && viewItem == triggerRule",
          "group": "inline@2"
        },
        {
          "command": "code-mantra.toggleTrigger",
          "when": "view == codeMantraTriggers && viewItem == triggerRule",
          "group": "actions@1"
        },
        {
          "command": "code-mantra.moveTriggerUp",
          "when": "view == codeMantraTriggers && viewItem == triggerRule",
          "group": "actions@2"
        },
        {
          "command": "code-mantra.moveTriggerDown",
          "when": "view == codeMantraTriggers && viewItem == triggerRule",
          "group": "actions@3"
        }
      ]
    },
    "configuration": {
      "title": "Code Mantra",
      "properties": {
        "codeMantra.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable Code Mantra notifications"
        },
        "codeMantra.triggers.onSave.enabled": {
          "type": "boolean",
          "default": true,
          "description": "‚úÖ Show notifications when saving files (recommended)"
        },
        "codeMantra.triggers.onEdit.enabled": {
          "type": "boolean",
          "default": false,
          "description": "‚è±Ô∏è Show notifications while editing (with delay)"
        },
        "codeMantra.triggers.onEdit.delay": {
          "type": "number",
          "default": 5000,
          "minimum": 1000,
          "maximum": 10000,
          "description": "Delay in milliseconds before showing notification (1000-10000ms)"
        },
        "codeMantra.triggers.onOpen.enabled": {
          "type": "boolean",
          "default": false,
          "description": "üìÇ Show notifications when opening files"
        },
        "codeMantra.triggers.onFocus.enabled": {
          "type": "boolean",
          "default": false,
          "description": "üéØ Show notifications when editor gains focus"
        },
        "codeMantra.fileTypes": {
          "type": "array",
          "default": [
            "typescript",
            "javascript",
            "typescriptreact",
            "javascriptreact",
            "python",
            "java",
            "go",
            "rust",
            "cpp",
            "c",
            "csharp",
            "html",
            "css",
            "scss",
            "sass",
            "less",
            "vue",
            "svelte",
            "ruby",
            "php",
            "swift",
            "kotlin",
            "dart",
            "yaml",
            "json",
            "markdown",
            "mdx"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of language IDs to show notifications for. Add or remove languages as needed."
        },
        "codeMantra.excludePatterns": {
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/build/**",
            "**/.git/**"
          ],
          "items": {
            "type": "string"
          },
          "description": "Glob patterns to exclude files/directories from notifications (e.g., **/node_modules/**, **/*.test.ts)"
        },
        "codeMantra.rules": {
          "type": "array",
          "default": [
            {
              "trigger": "onSave",
              "message": "ETC? (Easier To Change?)"
            }
          ],
          "description": "Custom notification rules with trigger, message, and file pattern",
          "items": {
            "type": "object",
            "required": [
              "trigger",
              "message"
            ],
            "properties": {
              "trigger": {
                "type": "string",
                "enum": [
                  "onSave",
                  "onEdit",
                  "onOpen",
                  "onFocus"
                ],
                "description": "When to trigger the notification"
              },
              "message": {
                "type": "string",
                "description": "The notification text to display"
              },
              "filePattern": {
                "type": "string",
                "description": "Glob pattern for file matching (optional, defaults to all files)"
              },
              "enabled": {
                "type": "boolean",
                "default": true,
                "description": "Enable or disable this rule"
              }
            }
          }
        },
        "codeMantra.timeBasedNotifications.enabled": {
          "type": "boolean",
          "default": true,
          "description": "‚è∞ Enable time-based notifications at regular intervals"
        },
        "codeMantra.timeBasedNotifications.intervals": {
          "type": "array",
          "default": [
            {
              "duration": 50,
              "message": "üí° Time to take a break! Step away from your screen.",
              "type": "workBreak",
              "enabled": true
            },
            {
              "duration": 25,
              "message": "üçÖ Pomodoro complete! Take a short break.",
              "type": "pomodoro",
              "enabled": false
            }
          ],
          "description": "Configure timer intervals (duration in minutes, message, type, and enabled status)",
          "items": {
            "type": "object",
            "required": [
              "duration",
              "message",
              "type",
              "enabled"
            ],
            "properties": {
              "duration": {
                "type": "number",
                "minimum": 1,
                "maximum": 120,
                "description": "Duration in minutes (1-120)"
              },
              "message": {
                "type": "string",
                "description": "Notification message to display"
              },
              "type": {
                "type": "string",
                "enum": [
                  "workBreak",
                  "pomodoro",
                  "custom"
                ],
                "description": "Timer type"
              },
              "enabled": {
                "type": "boolean",
                "description": "Enable or disable this timer"
              }
            }
          }
        },
        "codeMantra.timeBasedNotifications.resetOn": {
          "type": "array",
          "default": [
            "save"
          ],
          "description": "Reset timers on specific events (save, focus)",
          "items": {
            "type": "string",
            "enum": [
              "save",
              "focus"
            ]
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.105.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "eslint": "^9.36.0",
    "esbuild": "^0.25.10",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.9.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}
